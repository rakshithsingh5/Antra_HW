1.They are six types of access modifiers In c# and they are:
    1. public: The code is accessible for all classes.
    2. private: The code is only accessible within the same class.
    3. protected: The code is accessible within the same class, or in a class that is inherited from that class.
    4. Internal: The code is only accessible within its own assembly, but not from another assembly. You will learn more about this in a later chapter.
    5. Protected Internal: Only code in the same assembly or in a derived class in another assembly can access this type or member.
    6. private protected: private protected: Only code in the same assembly and in the same class or a derived class can access the type or member.

2.  A 'static' member belongs to the type itself and is shared by all instances, a 'const' member's value is immutable and set at compile-time, and a 'readonly' member's value can only be set during initialization or within a constructor.
3. A constructor is a special method of a class that is automatically called when an instance of the class is created. It is used to initialize the object.
4. The partial keyword lets you split the definition of a class, struct, or interface into multiple files, making it easier to manage and organize large codebases by keeping related parts separate and more understandable.
5. A tuple is a data structure that can hold a fixed number of elements of different types. It is useful for returning multiple values from a method without using out parameters.
6. The record keyword defines a reference type that provides built-in functionality for encapsulating data. Records provide concise syntax for defining immutable objects with value-based equality.
7. Overloading provides multiple methods in the same scope with the same name but different parameters whereas, Overriding means Providing a new implementation for a method in a derived class that is already defined in the base class. 
    The base method must be marked as virtual, abstract, or override.
8.  Field: A variable that is declared directly in a class or struct. It is used to store data directly.
    Property: A member that provides a flexible mechanism to read, write, or compute the value of a private field. Properties use accessors (get and set) to encapsulate fields.
9. 1.By using default value: You can implement optional parameters by using default value.
   2. By using Method Overloading: You can implement optional parameters concept by using method overloading. In method overloading, we create methods with the same name but with the different parameter list.
   3. By using OptionalAttribute: You can implement optional parameters by using OptionalAttribute.
   4.By Params Keyword: You can implement optional parameters by using the params keyword. It allows you to pass any variable number of parameters to a method.
10.An interface defines a contract that implementing classes must adhere to. It can contain method, property, event, and indexer declarations, but no implementation. 
    An abstract class can have implementations and can also define constructors, fields, and access modifiers.
11. Members of an interface are always public and do not include any access modifiers.
12. True.
13. True.
14. True.
15. False.
16. False.
17. True.
18. True.
19. False.
20. False.
21. True.
22. False.
23. True. 
